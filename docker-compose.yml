services:
  nginx:
    image: nginx:latest
    container_name: safe_nginx
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf # all configuration panel
      - ./.docker/nginx/app/FPM/local.conf:/etc/nginx/conf.d/default.conf # app panel example
      - ./.data/nginx/logs:/var/log/nginx
      - ./app:/var/www/app
     
    ports:
      - "${APP_EXPOSE_PORT}:80"
      # - "443:443" # uncomment when production deploy
    depends_on:
      - app
    networks:
      - application_network
    environment:
      - X_SERVER_TYPE=nginx

  app:
    build:
      context: .
      dockerfile: ./.docker/app/FPM/${PHP_VERSION}/Dockerfile
    container_name: safe_app
    volumes:
      - ./app:/var/www/app
    restart: always
    networks:
      - application_network
    environment:
      - X_SERVER_TYPE=app

  redis:
    image: redis:latest
    container_name: safe_redis
    ports:
      - "${REDIS_EXPOSE_PORT}:6379"
    volumes:
      - ./.data/redis:/data
    entrypoint: redis-server --appendonly yes
    restart: always
    networks:
      - application_network

  worker:
    build:
      context: .
      dockerfile: ./.docker/worker/FPM/${PHP_VERSION}/Dockerfile
    container_name: safe_worker
    command:
      - /usr/bin/supervisord
      - -c
      - /etc/supervisord.conf
    volumes:
      - ./app:/var/www/app
      - ./.data/logs/worker:/var/log
      - ./.docker/worker/FPM/${PHP_VERSION}/worker.conf:/etc/supervisor/conf.d/worker.conf
    networks:
      - application_network
    environment:
      - X_SERVER_TYPE=worker

  database:
    container_name: safe_database
    image: postgres:16
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      PGDATA: /data/postgres
    volumes:
      - ./.data/postgres:/data/postgres
    #  - ./.docker/postgres/initdb:/docker-entrypoint-initdb.d
    ports:
      - "${DB_EXPOSE_PORT}:5432"
    restart: always
    networks:
      - application_network

  mailpit:
    image: axllent/mailpit:latest
    restart: always
    ports:
      - '1028:1025'
      - '8028:8025'
    networks:
      - application_network

volumes:
  pgdata:
  redis:
    driver: local

networks:
  application_network:
    driver: bridge
